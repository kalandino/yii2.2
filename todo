Урок 1

	1. Развернуть приложение на базе Advanced Template.
	2. Настроить общую авторизацию для фронтенда и бекенда.
	3. *Применить к приложению тему Admin LTE.

	К курсовому проекту:
	1. Создать главную страницу Task tracker-а. //Перенести из проекта 1-го курса
	2. Посмотреть примеры трекеров Jira и Redmine.
	3. Какие элементы стоит разместить на главной странице?
	4. Проработать внешнией вид страницы задачи.
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 2

	К курсовому проекту:
	1. Создать процесс авторизации и распределить роли пользователей.
	2. Создать сущность «Задача» и реализовать ее свойства. Какие связанные сущности нужно будет создать?
	3. Покрыть тестами полученный код (и делать это в дальнейшем при выполнении проекта).
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 3

	2. Повторить чат из урока.
	3. Научить чат запоминать сообщения в БД.
	4. Создать блок задач:
		a. Контроллер должен оперировать сущностями «Task» (задача), «User» (пользователь).
		b. Задача имеет название, статус, описание, дату создания, дату обновления, исполнителя, создателя.
		c. Все задачи должны быть доступны на странице /task/index/. В списке показываются имя задачи, ее номер (ID) и имя исполнителя.
		d. При клике на задачу открывается страница задачи с ее описанием, где задачу можно редактировать.
	5. *Добавить к чату функционал «Вы пропустили сообщения». Он выводит все сообщения, которые были пропущены с момента закрытия страницы
	6. *Добавить к каждой задаче чат. Каждая задача должна иметь свой канал сообщений. Подумать, как лучше хранить историю чата.

	К курсовому проекту:
	1. Встроить чат на страницы трекера. Не забывайте, что пользователи должны быть авторизованы и могут смотреть историю чата.
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 4

	1. Создать таблицу модель Проект
	1. Добавить к выводу в таблице проектов текущий статус проекта.
	2. Сделать имя проекта ссылкой, при переходе на которую будет открываться страница проекта.
	3. Добавить сущности task новое свойство – id проекта, к которому принадлежит task.
	4. На странице проекта выводить превью с привязанными задачами.
	5. В админке сделать обновление GreedView через Pjax
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 5

	1. Создать своего бота, воспроизвести примеры с занятия.

	К курсовому проекту:
	1. Реализовать функционал рассылки сообщений по созданию и обновлению проектов.
	2. Добавить функционал оповещения о новых задачах.
	3. Отправка оповещений через события
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 6

	1. Развернуть свой RESTful API.

	К курсовому проекту:
	1. Представьте, что с Вашим проектом будет интегрироваться сторонняя система. Интегрироваться она будет по REST API. Вам нужно продумать и реализовать функционал API для получения информации и управления задачами (сущность task).
	2. *Добавить к функционалу REST API авторизацию для контроля доступа к задачам (задача получает свойство приватности).
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
Урок 7

1. Проверить свое приложение на предмет необходимости применения хелперов.
2. *Изучить класс URLHelper.
3. *Реализовать «запоминание URL», показывать пользователю пять последних просмотренных задач.
К курсовому проекту:

1. Построить модуль создания новой задачи (Task) на хелперах.
2. Построить модуль редактирования задач (Task) на хелперах.
3. *Если у вас есть реализованный из предыдущего курса проект «Календарь», необходимо интегрировать трекер с календарем следующим образом:
a. В календаре должны отображаться задачи, которые имеют deadline (соответственно, на дате предполагаемого завершения);
b. Через модуль календаря можно начать создавать задачи, т.е. можно кликнуть по числу, выбрать опцию создания новой задачи, затем определить – начинается ли эта задача с данного числа или оно является ее дедлайном.
------------------------------------------------------------------------------------------------
Урок 8

